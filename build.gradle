plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'maven'

    //id 'org.ajoberstar.grgit' version '4.0.1'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'com.webank.wecross'
version '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
}

configurations {
    all*.exclude group: 'org.ethereum', module: 'solcJ-all'
    all*.exclude group: 'ch.qos.logback', module: 'logback-classic'
    all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
}

def log4j_version="2.19.0"
List logger = [
        "org.apache.logging.log4j:log4j-api:$log4j_version",
        "org.apache.logging.log4j:log4j-core:$log4j_version",
        "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version",
        "org.apache.logging.log4j:log4j-web:$log4j_version",
        "org.apache.logging.log4j:log4j-jul:$log4j_version"
]

def wecross_version="1.3.0"

dependencies {
    //implementation(logger)
    implementation(group: 'org.yaml', name: 'snakeyaml', version: '1.30')
    // stub接口定义
    implementation (group: 'com.webank', name: 'wecross-java-stub', version: "$wecross_version") {
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: "io.netty"
        exclude group: "org.fisco-bcos", module: "tcnative"
    }

    implementation (group: 'org.chainmaker', name: 'chainmaker-sdk-java', version: '2.3.2') {
        exclude group: 'org.web3j'
    }
    runtimeOnly(group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.2.0') {
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    implementation (group: 'io.grpc', name: 'grpc-protobuf', version: '1.23.0')
    implementation (group: 'org.web3j', name: 'abi', version: '4.9.8')
    implementation (group: 'org.web3j', name: 'core', version: '4.9.8')
    implementation ('com.moandjiezana.toml:toml4j:0.7.2') {
        exclude group: 'com.google.code.gson', module: 'gson'
    }
    implementation 'commons-io:commons-io:2.7'
    implementation 'io.grpc:grpc-stub:1.53.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.slf4j:slf4j-log4j12:1.7.36'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.7'
}

sourceSets {

    main {
        resources {
            exclude '**/*.toml'
            exclude '**/*.xml'
            exclude '**/*.properties'
            exclude '**/*.yml'
            exclude '**/*.crt'
            exclude '**/*.key'
            include 'contract/WeCrossProxy/WeCrossProxy.sol'
            include 'contract/WeCrossProxy/WeCrossProxy.bin'
            include 'contract/WeCrossProxy/WeCrossProxy.abi'
            include 'contract/WeCrossHub/WeCrossHub.sol'
            include 'contract/WeCrossHub/WeCrossHub.bin'
            include 'contract/WeCrossHub/WeCrossHub.abi'
        }
    }

    // Add the integration test directory
    integTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
    }
}

// clean dist、build、log directory
task cleanAll(type: Delete) {
    delete 'dist'
    delete 'build'
    delete 'log'
    delete 'out'
}

tasks.clean.dependsOn(tasks.cleanAll)

shadowJar {
    manifest {
        attributes(
                'Main-Class': 'com.webank.wecross.stub.chainmake.ChainMakerStubFactory',
                'version': project.version,
        )
    }
    dependencies {
        //排除掉io.netty:.*，不打包进fat jar
        exclude(dependency('io.netty:.*'))
    }
    mergeServiceFiles()
    minimize{
        //不优化处理io.grpc:.*，直接打进fat jar
        exclude(dependency('io.grpc:.*'))
    }
}

// 打包操作，打包项目所有依赖生成 fat jar
task makeJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar, dependsOn: shadowJar) {

    destinationDir file('dist/apps')
    //archiveName project.name + "-" + project.version + '.jar'
    archiveName 'chainmaker2-stub-' + wecross_version + '.jar'
    exclude '**/*.xml'
    exclude '**/*.toml'
    exclude '**/*.properties'
    exclude '**/*.yml'

    from zipTree(shadowJar.getArchiveFile())
}

jar.enabled = false
project.tasks.assemble.dependsOn(makeJar)